import { FormElement } from '@material/mwc-base/form-element.js';
import { MDCSliderAdapter } from '@material/slider/adapter.js';
import MDCSliderFoundation from '@material/slider/foundation.js';
import { TemplateResult } from 'lit-element';
export declare class SliderBase extends FormElement {
    protected mdcFoundation: MDCSliderFoundation;
    protected readonly mdcFoundationClass: typeof MDCSliderFoundation;
    protected mdcRoot: HTMLElement;
    protected formElement: HTMLElement;
    protected thumbContainer: HTMLElement;
    protected pinMarker: HTMLElement;
    value: number;
    min: number;
    max: number;
    step: number;
    disabled: boolean;
    pin: boolean;
    markers: boolean;
    protected pinMarkerText: string;
    protected trackMarkerContainerStyles: {};
    protected thumbContainerStyles: {};
    protected trackStyles: {};
    protected isFoundationDestroyed: boolean;
    protected render(): TemplateResult;
    connectedCallback(): void;
    disconnectedCallback(): void;
    protected createAdapter(): MDCSliderAdapter;
    protected resetFoundation(): void;
    /**
     * Layout is called on mousedown / touchstart as the dragging animations of
     * slider are calculated based off of the bounding rect which can change
     * between interactions with this component, and this is the only location
     * in the foundation that udpates the rects. e.g. scrolling horizontally
     * causes adverse effects on the bounding rect vs mouse drag / touchmove
     * location.
     */
    layout(): void;
}
