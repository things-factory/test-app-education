{"version":3,"file":"mwc-textfield-base.js","sourceRoot":"","sources":["src/mwc-textfield-base.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport '@material/mwc-notched-outline';\n\nimport {MDCFloatingLabelFoundation} from '@material/floating-label/foundation.js';\nimport {MDCLineRippleFoundation} from '@material/line-ripple/foundation.js';\nimport {addHasRemoveClass, FormElement} from '@material/mwc-base/form-element.js';\nimport {floatingLabel, FloatingLabel} from '@material/mwc-floating-label';\nimport {lineRipple, LineRipple} from '@material/mwc-line-ripple';\nimport {NotchedOutline} from '@material/mwc-notched-outline';\nimport {MDCTextFieldAdapter, MDCTextFieldInputAdapter, MDCTextFieldLabelAdapter, MDCTextFieldLineRippleAdapter, MDCTextFieldOutlineAdapter, MDCTextFieldRootAdapter} from '@material/textfield/adapter.js';\nimport {MDCTextFieldCharacterCounterFoundation} from '@material/textfield/character-counter/foundation.js';\nimport MDCTextFieldFoundation from '@material/textfield/foundation.js';\nimport {eventOptions, html, property, PropertyValues, query, TemplateResult} from 'lit-element';\nimport {classMap} from 'lit-html/directives/class-map';\nimport {ifDefined} from 'lit-html/directives/if-defined.js';\n\nimport {characterCounter, CharacterCounter} from './mwc-character-counter-directive.js';\n\n// must be done to get past lit-analyzer checks\ndeclare global {\n  interface Element {\n    floatingLabelFoundation?: MDCFloatingLabelFoundation;\n    lineRippleFoundation?: MDCLineRippleFoundation;\n    charCounterFoundation?: MDCTextFieldCharacterCounterFoundation;\n  }\n}\n\ntype CustomValidityState = {\n  -readonly[P in keyof ValidityState]: ValidityState[P]\n};\n\n\nconst passiveEvents = ['touchstart', 'touchmove', 'scroll', 'mousewheel'];\n\nconst createValidityObj =\n    (customValidity: Partial<ValidityState> = {}): ValidityState => {\n      /*\n       * We need to make ValidityState an object because it is readonly and\n       * we cannot use the spread operator. Also, we don't export\n       * `CustomValidityState` because it is a leaky implementation and the user\n       * already has access to `ValidityState` in lib.dom.ts. Also an interface\n       * {a: Type} can be casted to {readonly a: Type} so passing any object\n       * should be fine.\n       */\n      const objectifiedCustomValidity: Partial<CustomValidityState> = {};\n\n      // eslint-disable-next-line guard-for-in\n      for (const propName in customValidity) {\n        /*\n         * Casting is needed because ValidityState's props are all readonly and\n         * thus cannot be set on `onjectifiedCustomValidity`. In the end, the\n         * interface is the same as ValidityState (but not readonly), but the\n         * function signature casts the output to ValidityState (thus readonly).\n         */\n        objectifiedCustomValidity[propName as keyof CustomValidityState] =\n            customValidity[propName as keyof ValidityState];\n      }\n\n      return {\n        badInput: false,\n        customError: false,\n        patternMismatch: false,\n        rangeOverflow: false,\n        rangeUnderflow: false,\n        stepMismatch: false,\n        tooLong: false,\n        tooShort: false,\n        typeMismatch: false,\n        valid: true,\n        valueMissing: false,\n        ...objectifiedCustomValidity\n      };\n    };\n\n/**\n * This is the enumerated typeof HTMLInputElement.type as declared by\n * lit-analyzer.\n */\nexport type TextFieldType = 'text'|'search'|'tel'|'url'|'email'|'password'|\n    'date'|'month'|'week'|'time'|'datetime-local'|'number'|'color';\n\nexport abstract class TextFieldBase extends FormElement {\n  protected mdcFoundation!: MDCTextFieldFoundation;\n\n  protected readonly mdcFoundationClass = MDCTextFieldFoundation;\n\n  @query('.mdc-text-field') protected mdcRoot!: HTMLElement;\n\n  @query('input') protected formElement!: HTMLInputElement;\n\n  @query('.mdc-floating-label') protected labelElement!: FloatingLabel|null;\n\n  @query('.mdc-line-ripple') protected lineRippleElement!: LineRipple|null;\n\n  @query('mwc-notched-outline') protected outlineElement!: NotchedOutline|null;\n\n  @query('.mdc-notched-outline__notch') protected notchElement!: HTMLElement;\n\n  @query('.mdc-text-field-character-counter')\n  protected charCounterElement!: CharacterCounter;\n\n  @property({type: String}) value = '';\n\n  @property({type: String}) type: TextFieldType = 'text';\n\n  @property({type: String}) placeholder = '';\n\n  @property({type: String}) label = '';\n\n  @property({type: String}) icon = '';\n\n  @property({type: String}) iconTrailing = '';\n\n  @property({type: Boolean, reflect: true}) disabled = false;\n\n  @property({type: Boolean}) required = false;\n\n  @property({type: Number}) maxLength = -1;\n\n  @property({type: Boolean, reflect: true}) outlined = false;\n\n  @property({type: Boolean, reflect: true}) fullWidth = false;\n\n  @property({type: String}) helper = '';\n\n  @property({type: Boolean}) validateOnInitialRender = false;\n\n  @property({type: String}) validationMessage = '';\n\n  @property({type: String}) pattern = '';\n\n  @property({type: Number}) min: number|string = '';\n\n  @property({type: Number}) max: number|string = '';\n\n  @property({type: Number}) step: number|null = null;\n\n  @property({type: Boolean}) helperPersistent = false;\n\n  @property({type: Boolean}) charCounter = false;\n\n  @property({type: Boolean}) endAligned = false;\n\n  @property({type: Boolean}) protected outlineOpen = false;\n  @property({type: Number}) protected outlineWidth = 0;\n  @property({type: Boolean}) protected isUiValid = true;\n\n  protected _validity: ValidityState = createValidityObj();\n  protected _outlineUpdateComplete: null|Promise<unknown> = null;\n\n  get validity(): ValidityState {\n    this._checkValidity(this.value);\n\n    return this._validity;\n  }\n\n  get willValidate(): boolean {\n    return this.formElement.willValidate;\n  }\n\n  get selectionStart(): number|null {\n    return this.formElement.selectionStart;\n  }\n\n  get selectionEnd(): number|null {\n    return this.formElement.selectionEnd;\n  }\n\n  protected get shouldRenderHelperText(): boolean {\n    return !!this.helper || !!this.validationMessage || this.charCounterVisible;\n  }\n\n  protected get charCounterVisible(): boolean {\n    return this.charCounter && this.maxLength !== -1;\n  }\n\n  validityTransform:\n      ((value: string,\n        nativeValidity: ValidityState) => Partial<ValidityState>)|null = null;\n\n  focus() {\n    const focusEvt = new CustomEvent('focus');\n    this.formElement.dispatchEvent(focusEvt);\n    this.formElement.focus();\n  }\n\n  blur() {\n    const blurEvt = new CustomEvent('blur');\n    this.formElement.dispatchEvent(blurEvt);\n    this.formElement.blur();\n  }\n\n  select() {\n    this.formElement.select();\n  }\n\n  setSelectionRange(\n      selectionStart: number, selectionEnd: number,\n      selectionDirection?: 'forward'|'backward'|'none') {\n    this.formElement.setSelectionRange(\n        selectionStart, selectionEnd, selectionDirection);\n  }\n\n  render() {\n    const classes = {\n      'mdc-text-field--disabled': this.disabled,\n      'mdc-text-field--no-label': !this.label,\n      'mdc-text-field--outlined': this.outlined,\n      'mdc-text-field--fullwidth': this.fullWidth,\n      'mdc-text-field--with-leading-icon': this.icon,\n      'mdc-text-field--with-trailing-icon': this.iconTrailing,\n      'mdc-text-field--end-aligned': this.endAligned,\n    };\n    return html`\n      <label class=\"mdc-text-field ${classMap(classes)}\">\n        ${this.icon ? this.renderIcon(this.icon) : ''}\n        ${this.renderInput()}\n        ${this.iconTrailing ? this.renderIcon(this.iconTrailing, true) : ''}\n        ${this.outlined ? this.renderOutlined() : this.renderLabelText()}\n      </label>\n      ${this.renderHelperText(this.renderCharCounter())}\n    `;\n  }\n\n  updated(changedProperties: PropertyValues) {\n    const maxLength = changedProperties.get('maxLength') as number | undefined;\n\n    const maxLengthBecameDefined = maxLength === -1 && this.maxLength !== -1;\n    const maxLengthBecameUndefined =\n        maxLength !== undefined && maxLength !== -1 && this.maxLength === -1;\n\n    /* We want to recreate the foundation if maxLength changes to defined or\n     * undefined, because the textfield foundation needs to be instantiated with\n     * the char counter's foundation, and the char counter's foundation needs\n     * to have maxLength defined to be instantiated. Additionally, there is no\n     * exposed API on the MdcTextFieldFoundation to dynamically add a char\n     * counter foundation, so we must recreate it.\n     */\n    if (maxLengthBecameDefined || maxLengthBecameUndefined) {\n      this.createFoundation();\n    }\n\n    if (changedProperties.has('value') &&\n        changedProperties.get('value') !== undefined) {\n      this.mdcFoundation.setValue(this.value);\n    }\n  }\n\n  protected renderInput() {\n    const maxOrUndef = this.maxLength === -1 ? undefined : this.maxLength;\n    return html`\n      <input\n          aria-labelledby=\"label\"\n          class=\"mdc-text-field__input\"\n          type=\"${this.type}\"\n          .value=\"${this.value}\"\n          ?disabled=\"${this.disabled}\"\n          placeholder=\"${this.placeholder}\"\n          ?required=\"${this.required}\"\n          maxlength=\"${ifDefined(maxOrUndef)}\"\n          pattern=\"${ifDefined(this.pattern ? this.pattern : undefined)}\"\n          min=\"${ifDefined(this.min === '' ? undefined : this.min as number)}\"\n          max=\"${ifDefined(this.max === '' ? undefined : this.max as number)}\"\n          step=\"${ifDefined(this.step === null ? undefined : this.step)}\"\n          @input=\"${this.handleInputChange}\"\n          @blur=\"${this.onInputBlur}\">`;\n  }\n\n  protected renderIcon(icon: string, isTrailingIcon = false) {\n    const classes = {\n      'mdc-text-field__icon--leading': !isTrailingIcon,\n      'mdc-text-field__icon--trailing': isTrailingIcon\n    };\n\n    return html`<i class=\"material-icons mdc-text-field__icon ${\n        classMap(classes)}\">${icon}</i>`;\n  }\n\n  protected renderOutlined() {\n    let labelTemplate: TemplateResult|string = '';\n    if (this.label) {\n      labelTemplate = html`\n        <span\n            .floatingLabelFoundation=${floatingLabel(this.label)}\n            @labelchange=${this.onLabelChange}\n            id=\"label\">\n          ${this.label}\n        </span>\n      `;\n    }\n    return html`\n      <mwc-notched-outline\n          .width=${this.outlineWidth}\n          .open=${this.outlineOpen}\n          class=\"mdc-notched-outline\">\n        ${labelTemplate}\n      </mwc-notched-outline>`;\n  }\n\n  protected renderLabelText() {\n    let labelTemplate: TemplateResult|string = '';\n    if (this.label && !this.fullWidth) {\n      labelTemplate = html`\n      <span\n          .floatingLabelFoundation=${floatingLabel(this.label)}\n          id=\"label\">\n        ${this.label}\n      </span>`;\n    }\n\n    return html`\n      ${labelTemplate}\n      <div .lineRippleFoundation=${lineRipple()}></div>\n    `;\n  }\n\n  protected renderHelperText(charCounterTemplate?: TemplateResult) {\n    const showValidationMessage = this.validationMessage && !this.isUiValid;\n    const classes = {\n      'mdc-text-field-helper-text--persistent': this.helperPersistent,\n      'mdc-text-field-helper-text--validation-msg': showValidationMessage,\n    };\n\n    const rootClasses = {\n      hidden: !this.shouldRenderHelperText,\n    };\n\n    return html`\n      <div class=\"mdc-text-field-helper-line ${classMap(rootClasses)}\">\n        <div class=\"mdc-text-field-helper-text ${classMap(classes)}\">\n          ${showValidationMessage ? this.validationMessage : this.helper}\n        </div>\n        ${charCounterTemplate}\n      </div>\n    `;\n  }\n\n  protected renderCharCounter() {\n    const counterClasses = {\n      hidden: !this.charCounterVisible,\n    };\n\n    return html`\n      <div\n          class=\"${classMap(counterClasses)}\"\n          .charCounterFoundation=${characterCounter()}>\n      </div>`;\n  }\n\n  protected onInputBlur() {\n    this.reportValidity();\n  }\n\n  checkValidity(): boolean {\n    const isValid = this._checkValidity(this.value);\n\n    if (!isValid) {\n      const invalidEvent =\n          new Event('invalid', {bubbles: false, cancelable: true});\n      this.dispatchEvent(invalidEvent);\n    }\n\n    return isValid;\n  }\n\n  reportValidity(): boolean {\n    const isValid = this.checkValidity();\n\n    this.mdcFoundation.setValid(isValid);\n    this.isUiValid = isValid;\n\n    return isValid;\n  }\n\n  protected _checkValidity(value: string) {\n    const nativeValidity = this.formElement.validity;\n\n    let validity = createValidityObj(nativeValidity);\n\n    if (this.validityTransform) {\n      const customValidity = this.validityTransform(value, validity);\n      validity = {...validity, ...customValidity};\n      this.mdcFoundation.setUseNativeValidation(false);\n    } else {\n      this.mdcFoundation.setUseNativeValidation(true);\n    }\n\n    this._validity = validity;\n\n    return this._validity.valid;\n  }\n\n  setCustomValidity(message: string) {\n    this.validationMessage = message;\n    this.formElement.setCustomValidity(message);\n  }\n\n  @eventOptions({passive: true})\n  protected handleInputChange() {\n    this.value = this.formElement.value;\n  }\n\n  protected createFoundation() {\n    if (this.mdcFoundation !== undefined) {\n      this.mdcFoundation.destroy();\n    }\n    this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter(), {\n      characterCounter: this.maxLength !== -1 ?\n          this.charCounterElement.charCounterFoundation :\n          undefined\n    });\n    this.mdcFoundation.init();\n  }\n\n  protected createAdapter(): MDCTextFieldAdapter {\n    return {\n      ...this.getRootAdapterMethods(),\n      ...this.getInputAdapterMethods(),\n      ...this.getLabelAdapterMethods(),\n      ...this.getLineRippleAdapterMethods(),\n      ...this.getOutlineAdapterMethods(),\n    };\n  }\n\n  protected getRootAdapterMethods(): MDCTextFieldRootAdapter {\n    return {\n      registerTextFieldInteractionHandler: (evtType, handler) =>\n          this.addEventListener(evtType, handler),\n      deregisterTextFieldInteractionHandler: (evtType, handler) =>\n          this.removeEventListener(evtType, handler),\n      registerValidationAttributeChangeHandler: () => {\n        const getAttributesList =\n            (mutationsList: MutationRecord[]): string[] => {\n              return mutationsList.map((mutation) => mutation.attributeName)\n                         .filter((attributeName) => attributeName) as string[];\n            };\n        const observer = new MutationObserver((mutationsList) => {\n          const attributes = getAttributesList(mutationsList);\n          if (attributes.indexOf('maxlength') !== -1 && this.maxLength !== -1) {\n            this.charCounterElement.charCounterFoundation.setCounterValue(\n                this.value.length, this.maxLength);\n          }\n        });\n        const config = {attributes: true};\n        observer.observe(this.formElement, config);\n        return observer;\n      },\n      deregisterValidationAttributeChangeHandler:\n          (observer: MutationObserver) => observer.disconnect(),\n      ...addHasRemoveClass(this.mdcRoot),\n    };\n  }\n\n  protected getInputAdapterMethods(): MDCTextFieldInputAdapter {\n    return {\n      getNativeInput: () => this.formElement,\n      isFocused: () => this.shadowRoot ?\n          this.shadowRoot.activeElement === this.formElement :\n          false,\n      registerInputInteractionHandler: (evtType, handler) =>\n          this.formElement.addEventListener(\n              evtType, handler, {passive: evtType in passiveEvents}),\n      deregisterInputInteractionHandler: (evtType, handler) =>\n          this.formElement.removeEventListener(evtType, handler),\n    };\n  }\n\n  protected getLabelAdapterMethods(): MDCTextFieldLabelAdapter {\n    return {\n      floatLabel: (shouldFloat: boolean) => this.labelElement &&\n          this.labelElement.floatingLabelFoundation.float(shouldFloat),\n      getLabelWidth: () => {\n        return this.labelElement ?\n            this.labelElement.floatingLabelFoundation.getWidth() :\n            0;\n      },\n      hasLabel: () => Boolean(this.labelElement),\n      shakeLabel: (shouldShake: boolean) => this.labelElement &&\n          this.labelElement.floatingLabelFoundation.shake(shouldShake),\n    };\n  }\n\n  protected getLineRippleAdapterMethods(): MDCTextFieldLineRippleAdapter {\n    return {\n      activateLineRipple: () => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.activate();\n        }\n      },\n      deactivateLineRipple: () => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.deactivate();\n        }\n      },\n      setLineRippleTransformOrigin: (normalizedX: number) => {\n        if (this.lineRippleElement) {\n          this.lineRippleElement.lineRippleFoundation.setRippleCenter(\n              normalizedX);\n        }\n      },\n    };\n  }\n\n  async _getUpdateComplete() {\n    await super._getUpdateComplete();\n    await this._outlineUpdateComplete;\n  }\n\n  async firstUpdated() {\n    const outlineElement = this.outlineElement;\n    if (outlineElement) {\n      this._outlineUpdateComplete = outlineElement.updateComplete;\n      await this._outlineUpdateComplete;\n    }\n\n    super.firstUpdated();\n\n    if (this.validateOnInitialRender) {\n      this.reportValidity();\n    }\n  }\n\n  protected getOutlineAdapterMethods(): MDCTextFieldOutlineAdapter {\n    return {\n      closeOutline: () => this.outlineElement && (this.outlineOpen = false),\n      hasOutline: () => Boolean(this.outlineElement),\n      notchOutline: (labelWidth) => {\n        const outlineElement = this.outlineElement;\n        if (outlineElement && !this.outlineOpen) {\n          this.outlineWidth = labelWidth;\n          this.outlineOpen = true;\n        }\n      }\n    };\n  }\n\n  protected async onLabelChange() {\n    if (this.label) {\n      await this.layout();\n    }\n  }\n\n  async layout() {\n    await this.updateComplete;\n\n    if (this.labelElement && this.outlineElement) {\n      /* When the textfield automatically notches due to a value and label\n       * being defined, the textfield may be set to `display: none` by the user.\n       * this means that the notch is of size 0px. We provide this function so\n       * that the user may manually resize the notch to the floated label's\n       * width.\n       */\n      const labelWidth = this.labelElement.floatingLabelFoundation.getWidth();\n      if (this.outlineOpen) {\n        this.outlineWidth = labelWidth;\n      }\n    }\n  }\n}\n"]}